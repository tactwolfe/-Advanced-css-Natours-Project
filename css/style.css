/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* { /*universal selector to make all browser render our webpage in same way */
    margin: 0;
    padding: 0;
    box-sizing: border-box; /*border and padding won't be added to our box model thus not altering the height and width of the element*/
}

body{ /*here inside body selector we defined body wise font property that will be inherited by child element*/
    font-family: "lato",sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7; /*to give some distance between each lines of sentences*/
    color: #777;
    padding: 30px;
}

.header{
    position: relative;
    height: 95vh; /*in every case the height will be of 95% of view port height*/
    background-image: 
    linear-gradient( /*we put lineart gradiant first because we want it on the top and below that we want to show the hero image ,we specifies to right to make the gradiant start from left and go all the way to right*/
        to right,
        rgba(126, 213, 111, 0.801) , 
        rgba(40, 180, 133, 0.801)
        ), 
    url("../img/hero.jpg");

    background-size: cover; /*it will cover the entire avalable viewport*/
    background-position: top; /*even if we change the view port the top remains the same*/
    clip-path: polygon(
        0       0,
        100%    0,
        100%  75vh,
        0    100%
        );
}
.logo-box{
    position: absolute;
    top: 40px;
    left: 40px;
}
.logo{
    height: 35px;
}

.logo-box:hover .logo { /*TO ADD ANIMATION TO THE LOGO */
    animation: moveInRight 1s ease-in;
}

.text-box{
    position: absolute;
    top: 40%; /*relative to parent element*/
    left: 50%; /*relative to parent element*/
    transform: translate(-50%,-50%); /*transform it in relative to itself to centre it at any viewport*/
    text-align: center;
}

.heading-primary{
    color: #fff;
    text-transform: uppercase; /*to transaform the text into uppercase*/

    backface-visibility: hidden; /*to avoid shaky animation my hiding back part element*/
    margin-bottom: 60px;
}
.heading-primary-main{
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px; /*to give spacing between each letter of a word*/

    animation-name: moveInLeft; /*name of the animation*/
    animation-duration: 1s; /*duration of the animation*/
    animation-timing-function: ease-out;

    /* animation-timing-function: step-start; it specifies hoow a css animation should progress over the diration of time of each cycle */
    /* animation-iteration-count: 3;  this will replay the animation for the set count*/
    /* animation-delay: 3s;  this will delay the animation for the set duration */

}
.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation: moveInRight 1s ease-out ; /*alternative way of setting animation property in a single line code*/

    /* animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; */
}

.btn:link, /*so normal state of link unclicked and link visited will remain same*/
.btn:visited
{
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    transition: all .2s; /*transition property always used in initial state*/
    position: relative;
}

.btn-white{
    background-color: #fff;
    color: #777;
}

.btn:hover{
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, .8); /*first two are in which direction we want to put the shadow 3rd argument is blur value and last is color of the shadow*/
}

.btn:active{
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, .8);
}

.btn::after{
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s ; 
}
.btn-white::after{
    background-color: #fff;
}

.btn:hover::after{
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated{
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards; /*this automatically apply our 0% animation state to targeted element*/
    
}





@keyframes moveInLeft {
    0%{
        opacity: 0;
        transform: translateX(-100px);
    }
    80%{
        opacity: 0.7;
        transform: translateX(10px);
    }
    100%{
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0%{
        opacity: 0;
        transform: translateX(100px);
    }
    80%{
        opacity: 0.8;
        transform: translateX(-10px);
    }
    100%{
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom{
    0%{
        opacity: 0;
        transform: translateY(30px);
    }
    100%{
        opacity: 1;
        transform: translate(0);
    }
}